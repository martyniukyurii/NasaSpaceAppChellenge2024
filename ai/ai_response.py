import openai
from config import OPENAI_API_KEY
from external.nasa_api import fetch_nasa_data

openai.api_key = OPENAI_API_KEY


async def generate_response(user_input: str, state: dict):
    # Use GPT to generate a response based on the current game state
    prompt = (f"Ми граємо у гру квест"
              f"Основний сюжетний напрямок:"
f"Гравець подорожує світом через різні локації: від великих міст до гірських річок і тропічних лісів, де йому доводиться досліджувати і вирішувати реальні екологічні проблеми. Наприклад, боротьба з урбанізацією, забрудненням води, наслідками посух та хвиль спеки, аналіз причин повеней і пошук шляхів їхньої мінімізації."
              f"також тобі будуть надані реальні екологічні данні від НАСА, щось з ними зроби, якось інтегруй в квест"

f"Основні етапи гри:"
f"Початкова точка: (1-3 states) Гравець знаходиться у своїй рідній місцевості, де отримує перше завдання. Наприклад, виміряти рівень забруднення річки або вивчити стан ґрунтів після затяжної посухи. На кожному етапі він може:"
f"Використати наукові інструменти та провести дослідження за протоколами GLOBE (гравець вибирає інструменти, ставить експерименти)."
f"Прийняти рішення щодо того, як діяти далі (використовувати місцеві ресурси, залучати команду, звітувати про результати)."
f"(4-5 states)Придумуєш завдання і даєш інструменти його вирішення: Міжнародні місії: Гравець отримує доступ до глобальних проблем і викликів — досліджує тропічні ліси, арктичні льодовики, величезні міста та океани. Наприклад, можна брати участь у дослідженні танення льодовиків або моніторингу коралових рифів."
f"(6 state gameover)Придумуєш завдання і даєш інструменти його вирішення: Загроза на рівні планети: Наприкінці гри гравець зіткнеться із серйозною екологічною кризою глобального масштабу. "
              f"Наприклад, хвилею забруднення повітря або великим катаклізмом (цунамі, повінь). Усі попередні рішення "
              f"і знання, здобуті у процесі гри, вплинуть на те, чи зможе гравець успішно вирішити цю кризу."
              f"якщо гравець на 6 етапі або більше, ти закінчуєш гру і дякуєш гравцеві"
    f"Данні від наса {await fetch_nasa_data(lat=14, lon=88)}"
              f"User is at step {state['step']} of the game. User input: {user_input}")

    client = openai.AsyncClient()
    response = await client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}]
    )
    response_content = response.choices[0].message.content

    new_state = state.copy()
    new_state["step"] += 1

    return {
        "text": response_content.strip(),
        "new_state": new_state
    }
